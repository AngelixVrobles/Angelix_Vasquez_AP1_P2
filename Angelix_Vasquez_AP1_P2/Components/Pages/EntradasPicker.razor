<div class="col-auto input-group align-items-center">
    <label class="col-form-label input-group-text">Seleccione Producto:</label>

    <InputSelect class="form-control form-select" @bind-Value="selectedProductoId">
        <option disabled value="0">-- Seleccione un producto --</option>
        @foreach (var producto in productos)
        {
            <option value="@producto.ProductosId">@producto.Descripcion ($@producto.Peso.ToString("N2"))</option>
        }
    </InputSelect>

    <label class="col-form-label input-group-text">Cantidad:</label>
    <InputNumber class="form-control" id="quantity-input" @bind-Value="cantidad" min="1" />

    <button type="button" class="btn btn-outline-success bi bi-plus" @onclick="AgregarProducto">Agregar</button>
</div>

@if (ErrorMessage != null)
{
    <div class="alert alert-danger" role="alert">
        @ErrorMessage
    </div>
}

@code {
    [Parameter]
    public List<Producto> productos { get; set; } = new List<Producto>();

    [Parameter]
    public int selectedProductoId { get; set; }

    [Parameter]
    public int cantidad { get; set; }

    [Parameter]
    public EventCallback<(Producto ProductoSeleccionado, int Cantidad)> ProductoSeleccionado { get; set; }

    private string? ErrorMessage { get; set; } = null;

    private async Task AgregarProducto()
    {
        ErrorMessage = null;

        // Verificar si el producto ha sido seleccionado
        if (selectedProductoId > 0)
        {
            // Buscar el producto seleccionado
            var productoSeleccionado = productos.SingleOrDefault(p => p.ProductosId == selectedProductoId);

            // Verificar si el producto existe
            if (productoSeleccionado == null)
            {
                ErrorMessage = "Producto no encontrado.";
                return;
            }

            // Verificar si la cantidad es mayor que 0
            if (cantidad <= 0)
            {
                ErrorMessage = "La cantidad debe ser mayor que 0.";
                return;
            }

            // Invocar el evento para agregar el producto con la cantidad
            await ProductoSeleccionado.InvokeAsync((productoSeleccionado, cantidad));
        }
        else
        {
            ErrorMessage = "Debe seleccionar un producto.";
        }
    }
}